//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClassLibrary1
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class andhimaEntities : DbContext
    {
        public andhimaEntities()
            : base("name=andhimaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<AddressTypeMaster> AddressTypeMasters { get; set; }
        public DbSet<Announcement> Announcements { get; set; }
        public DbSet<FamilyTree> FamilyTrees { get; set; }
        public DbSet<ForgotPassword> ForgotPasswords { get; set; }
        public DbSet<LendAHand> LendAHands { get; set; }
        public DbSet<RegionMaster> RegionMasters { get; set; }
        public DbSet<TermsMaster> TermsMasters { get; set; }
        public DbSet<Timeline> Timelines { get; set; }
        public DbSet<UserAccount> UserAccounts { get; set; }
        public DbSet<UserComment> UserComments { get; set; }
        public DbSet<AnnoucementUserMapping> AnnoucementUserMappings { get; set; }
        public DbSet<ContributionDetail> ContributionDetails { get; set; }
        public DbSet<Nominee> Nominees { get; set; }
        public DbSet<UserContactDetail> UserContactDetails { get; set; }
        public DbSet<UserPersonalDetail> UserPersonalDetails { get; set; }
    
        public virtual int AddUserAccount(string username, string password, string email)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddUserAccount", usernameParameter, passwordParameter, emailParameter);
        }
    
        public virtual ObjectResult<string> LoginValidate(string username)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("LoginValidate", usernameParameter);
        }
    
        public virtual ObjectResult<USP_GetAllComments_Result> USP_GetAllComments(Nullable<int> announcmentID)
        {
            var announcmentIDParameter = announcmentID.HasValue ?
                new ObjectParameter("announcmentID", announcmentID) :
                new ObjectParameter("announcmentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetAllComments_Result>("USP_GetAllComments", announcmentIDParameter);
        }
    
        public virtual int deleteForgot(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteForgot", emailParameter);
        }
    
        public virtual int insertForgotPw(string email, string numbhash, string mailhash)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var numbhashParameter = numbhash != null ?
                new ObjectParameter("numbhash", numbhash) :
                new ObjectParameter("numbhash", typeof(string));
    
            var mailhashParameter = mailhash != null ?
                new ObjectParameter("mailhash", mailhash) :
                new ObjectParameter("mailhash", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertForgotPw", emailParameter, numbhashParameter, mailhashParameter);
        }
    
        public virtual int resetpw(string email, string pw)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var pwParameter = pw != null ?
                new ObjectParameter("pw", pw) :
                new ObjectParameter("pw", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("resetpw", emailParameter, pwParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> checkResetCode(string email, string code)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("checkResetCode", emailParameter, codeParameter);
        }
    
        public virtual ObjectResult<string> getMailId(string hashmail, string hashcode)
        {
            var hashmailParameter = hashmail != null ?
                new ObjectParameter("hashmail", hashmail) :
                new ObjectParameter("hashmail", typeof(string));
    
            var hashcodeParameter = hashcode != null ?
                new ObjectParameter("hashcode", hashcode) :
                new ObjectParameter("hashcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getMailId", hashmailParameter, hashcodeParameter);
        }
    
        public virtual int USP_InsertComment(Nullable<int> userID, Nullable<int> parentID, Nullable<int> announcementID, string commentsText, Nullable<System.DateTime> createdDateTime, Nullable<System.DateTime> modifiedDateTime, Nullable<int> upVoteCount)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var parentIDParameter = parentID.HasValue ?
                new ObjectParameter("ParentID", parentID) :
                new ObjectParameter("ParentID", typeof(int));
    
            var announcementIDParameter = announcementID.HasValue ?
                new ObjectParameter("AnnouncementID", announcementID) :
                new ObjectParameter("AnnouncementID", typeof(int));
    
            var commentsTextParameter = commentsText != null ?
                new ObjectParameter("CommentsText", commentsText) :
                new ObjectParameter("CommentsText", typeof(string));
    
            var createdDateTimeParameter = createdDateTime.HasValue ?
                new ObjectParameter("CreatedDateTime", createdDateTime) :
                new ObjectParameter("CreatedDateTime", typeof(System.DateTime));
    
            var modifiedDateTimeParameter = modifiedDateTime.HasValue ?
                new ObjectParameter("ModifiedDateTime", modifiedDateTime) :
                new ObjectParameter("ModifiedDateTime", typeof(System.DateTime));
    
            var upVoteCountParameter = upVoteCount.HasValue ?
                new ObjectParameter("UpVoteCount", upVoteCount) :
                new ObjectParameter("UpVoteCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_InsertComment", userIDParameter, parentIDParameter, announcementIDParameter, commentsTextParameter, createdDateTimeParameter, modifiedDateTimeParameter, upVoteCountParameter);
        }
    
        public virtual int USP_UpdateComment(Nullable<int> userID, Nullable<int> parentID, Nullable<int> announcementID, string commentsText, Nullable<System.DateTime> createdDateTime, Nullable<System.DateTime> modifiedDateTime, Nullable<int> upVoteCount)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var parentIDParameter = parentID.HasValue ?
                new ObjectParameter("ParentID", parentID) :
                new ObjectParameter("ParentID", typeof(int));
    
            var announcementIDParameter = announcementID.HasValue ?
                new ObjectParameter("AnnouncementID", announcementID) :
                new ObjectParameter("AnnouncementID", typeof(int));
    
            var commentsTextParameter = commentsText != null ?
                new ObjectParameter("CommentsText", commentsText) :
                new ObjectParameter("CommentsText", typeof(string));
    
            var createdDateTimeParameter = createdDateTime.HasValue ?
                new ObjectParameter("CreatedDateTime", createdDateTime) :
                new ObjectParameter("CreatedDateTime", typeof(System.DateTime));
    
            var modifiedDateTimeParameter = modifiedDateTime.HasValue ?
                new ObjectParameter("ModifiedDateTime", modifiedDateTime) :
                new ObjectParameter("ModifiedDateTime", typeof(System.DateTime));
    
            var upVoteCountParameter = upVoteCount.HasValue ?
                new ObjectParameter("UpVoteCount", upVoteCount) :
                new ObjectParameter("UpVoteCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_UpdateComment", userIDParameter, parentIDParameter, announcementIDParameter, commentsTextParameter, createdDateTimeParameter, modifiedDateTimeParameter, upVoteCountParameter);
        }
    
        public virtual int USP_UpdateVote(Nullable<int> userID, Nullable<int> upVoteCount)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var upVoteCountParameter = upVoteCount.HasValue ?
                new ObjectParameter("UpVoteCount", upVoteCount) :
                new ObjectParameter("UpVoteCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_UpdateVote", userIDParameter, upVoteCountParameter);
        }
    
        public virtual ObjectResult<byte[]> USP_Fetch_Images()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<byte[]>("USP_Fetch_Images");
        }
    
        public virtual ObjectResult<Nullable<int>> getMailCount(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("getMailCount", emailParameter);
        }
    
        public virtual ObjectResult<USP_getFamilyTree_Result> USP_getFamilyTree()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_getFamilyTree_Result>("USP_getFamilyTree");
        }
    
        public virtual ObjectResult<Nullable<int>> CheckUserPresence(string uname)
        {
            var unameParameter = uname != null ?
                new ObjectParameter("uname", uname) :
                new ObjectParameter("uname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CheckUserPresence", unameParameter);
        }
    
        public virtual ObjectResult<getPersonalDetails_Result> getPersonalDetails(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPersonalDetails_Result>("getPersonalDetails", useridParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> getUserID(string uname)
        {
            var unameParameter = uname != null ?
                new ObjectParameter("uname", uname) :
                new ObjectParameter("uname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("getUserID", unameParameter);
        }
    
        public virtual int insertPersonal(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertPersonal", useridParameter);
        }
    
        public virtual int insertProfFB(Nullable<int> userid, string fname)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertProfFB", useridParameter, fnameParameter);
        }
    
        public virtual int insertUserContact(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertUserContact", useridParameter);
        }
    
        public virtual ObjectResult<USP_FetchIndividualAnnouncement_Result> USP_FetchIndividualAnnouncement(Nullable<int> announcementId)
        {
            var announcementIdParameter = announcementId.HasValue ?
                new ObjectParameter("AnnouncementId", announcementId) :
                new ObjectParameter("AnnouncementId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_FetchIndividualAnnouncement_Result>("USP_FetchIndividualAnnouncement", announcementIdParameter);
        }
    
        public virtual ObjectResult<getContactDetails_Result> getContactDetails(Nullable<int> uid)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getContactDetails_Result>("getContactDetails", uidParameter);
        }
    
        public virtual ObjectResult<USP_getAnnouncementDetails_Result> USP_getAnnouncementDetails()
        {
           return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_getAnnouncementDetails_Result>("USP_getAnnouncementDetails");
        }
    
        public virtual ObjectResult<USP_getAnnouncementDetailsFilterGenNm_Result> USP_getAnnouncementDetailsFilterGenNm(string nm)
        {
            var nmParameter = nm != null ?
                new ObjectParameter("nm", nm) :
                new ObjectParameter("nm", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_getAnnouncementDetailsFilterGenNm_Result>("USP_getAnnouncementDetailsFilterGenNm", nmParameter);
        }
    
        public virtual ObjectResult<USP_getAnnouncementDetailsFilterGenNmDt_Result> USP_getAnnouncementDetailsFilterGenNmDt(string nm, Nullable<System.DateTime> fD, Nullable<System.DateTime> tD)
        {
            var nmParameter = nm != null ?
                new ObjectParameter("nm", nm) :
                new ObjectParameter("nm", typeof(string));
    
            var fDParameter = fD.HasValue ?
                new ObjectParameter("fD", fD) :
                new ObjectParameter("fD", typeof(System.DateTime));
    
            var tDParameter = tD.HasValue ?
                new ObjectParameter("tD", tD) :
                new ObjectParameter("tD", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_getAnnouncementDetailsFilterGenNmDt_Result>("USP_getAnnouncementDetailsFilterGenNmDt", nmParameter, fDParameter, tDParameter);
        }
    
        public virtual ObjectResult<USP_getAnnouncementDetailsFilterGenNmFDt_Result> USP_getAnnouncementDetailsFilterGenNmFDt(string nm, Nullable<System.DateTime> fD)
        {
            var nmParameter = nm != null ?
                new ObjectParameter("nm", nm) :
                new ObjectParameter("nm", typeof(string));
    
            var fDParameter = fD.HasValue ?
                new ObjectParameter("fD", fD) :
                new ObjectParameter("fD", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_getAnnouncementDetailsFilterGenNmFDt_Result>("USP_getAnnouncementDetailsFilterGenNmFDt", nmParameter, fDParameter);
        }
    
        public virtual ObjectResult<USP_getAnnouncementDetailsFilterGenNmTDt_Result> USP_getAnnouncementDetailsFilterGenNmTDt(string nm, Nullable<System.DateTime> tD)
        {
            var nmParameter = nm != null ?
                new ObjectParameter("nm", nm) :
                new ObjectParameter("nm", typeof(string));
    
            var tDParameter = tD.HasValue ?
                new ObjectParameter("tD", tD) :
                new ObjectParameter("tD", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_getAnnouncementDetailsFilterGenNmTDt_Result>("USP_getAnnouncementDetailsFilterGenNmTDt", nmParameter, tDParameter);
        }
    
        public virtual ObjectResult<USP_getDetailsBasedOnFilters_Result> USP_getDetailsBasedOnFilters(string filterName, Nullable<System.DateTime> filterToDate, Nullable<System.DateTime> filterFromDate)
        {
            var filterNameParameter = filterName != null ?
                new ObjectParameter("FilterName", filterName) :
                new ObjectParameter("FilterName", typeof(string));
    
            var filterToDateParameter = filterToDate.HasValue ?
                new ObjectParameter("FilterToDate", filterToDate) :
                new ObjectParameter("FilterToDate", typeof(System.DateTime));
    
            var filterFromDateParameter = filterFromDate.HasValue ?
                new ObjectParameter("FilterFromDate", filterFromDate) :
                new ObjectParameter("FilterFromDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_getDetailsBasedOnFilters_Result>("USP_getDetailsBasedOnFilters", filterNameParameter, filterToDateParameter, filterFromDateParameter);
        }
    
        public virtual ObjectResult<USP_getFemaleAnnouncementDetails_Result> USP_getFemaleAnnouncementDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_getFemaleAnnouncementDetails_Result>("USP_getFemaleAnnouncementDetails");
        }
    
        public virtual ObjectResult<USP_getFemaleAnnouncementDetailsFilterGenNm_Result> USP_getFemaleAnnouncementDetailsFilterGenNm(string nm)
        {
            var nmParameter = nm != null ?
                new ObjectParameter("nm", nm) :
                new ObjectParameter("nm", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_getFemaleAnnouncementDetailsFilterGenNm_Result>("USP_getFemaleAnnouncementDetailsFilterGenNm", nmParameter);
        }
    
        public virtual ObjectResult<USP_getFemaleAnnouncementDetailsFilterGenNmDt_Result> USP_getFemaleAnnouncementDetailsFilterGenNmDt(string nm, Nullable<System.DateTime> fD, Nullable<System.DateTime> tD)
        {
            var nmParameter = nm != null ?
                new ObjectParameter("nm", nm) :
                new ObjectParameter("nm", typeof(string));
    
            var fDParameter = fD.HasValue ?
                new ObjectParameter("fD", fD) :
                new ObjectParameter("fD", typeof(System.DateTime));
    
            var tDParameter = tD.HasValue ?
                new ObjectParameter("tD", tD) :
                new ObjectParameter("tD", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_getFemaleAnnouncementDetailsFilterGenNmDt_Result>("USP_getFemaleAnnouncementDetailsFilterGenNmDt", nmParameter, fDParameter, tDParameter);
        }
    
        public virtual ObjectResult<USP_getFemaleAnnouncementDetailsFilterGenNmFDt_Result> USP_getFemaleAnnouncementDetailsFilterGenNmFDt(string nm, Nullable<System.DateTime> fD)
        {
            var nmParameter = nm != null ?
                new ObjectParameter("nm", nm) :
                new ObjectParameter("nm", typeof(string));
    
            var fDParameter = fD.HasValue ?
                new ObjectParameter("fD", fD) :
                new ObjectParameter("fD", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_getFemaleAnnouncementDetailsFilterGenNmFDt_Result>("USP_getFemaleAnnouncementDetailsFilterGenNmFDt", nmParameter, fDParameter);
        }
    
        public virtual ObjectResult<USP_getFemaleAnnouncementDetailsFilterGenNmTDt_Result> USP_getFemaleAnnouncementDetailsFilterGenNmTDt(string nm, Nullable<System.DateTime> tD)
        {
            var nmParameter = nm != null ?
                new ObjectParameter("nm", nm) :
                new ObjectParameter("nm", typeof(string));
    
            var tDParameter = tD.HasValue ?
                new ObjectParameter("tD", tD) :
                new ObjectParameter("tD", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_getFemaleAnnouncementDetailsFilterGenNmTDt_Result>("USP_getFemaleAnnouncementDetailsFilterGenNmTDt", nmParameter, tDParameter);
        }
    
        public virtual ObjectResult<USP_getMaleAnnouncementDetails_Result> USP_getMaleAnnouncementDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_getMaleAnnouncementDetails_Result>("USP_getMaleAnnouncementDetails");
        }
    
        public virtual ObjectResult<USP_getMaleAnnouncementDetailsFilterGenNm_Result> USP_getMaleAnnouncementDetailsFilterGenNm(string nm)
        {
            var nmParameter = nm != null ?
                new ObjectParameter("nm", nm) :
                new ObjectParameter("nm", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_getMaleAnnouncementDetailsFilterGenNm_Result>("USP_getMaleAnnouncementDetailsFilterGenNm", nmParameter);
        }
    
        public virtual ObjectResult<USP_getMaleAnnouncementDetailsFilterGenNmDt_Result> USP_getMaleAnnouncementDetailsFilterGenNmDt(string nm, Nullable<System.DateTime> fD, Nullable<System.DateTime> tD)
        {
            var nmParameter = nm != null ?
                new ObjectParameter("nm", nm) :
                new ObjectParameter("nm", typeof(string));
    
            var fDParameter = fD.HasValue ?
                new ObjectParameter("fD", fD) :
                new ObjectParameter("fD", typeof(System.DateTime));
    
            var tDParameter = tD.HasValue ?
                new ObjectParameter("tD", tD) :
                new ObjectParameter("tD", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_getMaleAnnouncementDetailsFilterGenNmDt_Result>("USP_getMaleAnnouncementDetailsFilterGenNmDt", nmParameter, fDParameter, tDParameter);
        }
    
        public virtual ObjectResult<USP_getMaleAnnouncementDetailsFilterGenNmFDt_Result> USP_getMaleAnnouncementDetailsFilterGenNmFDt(string nm, Nullable<System.DateTime> fD)
        {
            var nmParameter = nm != null ?
                new ObjectParameter("nm", nm) :
                new ObjectParameter("nm", typeof(string));
    
            var fDParameter = fD.HasValue ?
                new ObjectParameter("fD", fD) :
                new ObjectParameter("fD", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_getMaleAnnouncementDetailsFilterGenNmFDt_Result>("USP_getMaleAnnouncementDetailsFilterGenNmFDt", nmParameter, fDParameter);
        }
    
        public virtual ObjectResult<USP_getMaleAnnouncementDetailsFilterGenNmTDt_Result> USP_getMaleAnnouncementDetailsFilterGenNmTDt(string nm, Nullable<System.DateTime> tD)
        {
            var nmParameter = nm != null ?
                new ObjectParameter("nm", nm) :
                new ObjectParameter("nm", typeof(string));
    
            var tDParameter = tD.HasValue ?
                new ObjectParameter("tD", tD) :
                new ObjectParameter("tD", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_getMaleAnnouncementDetailsFilterGenNmTDt_Result>("USP_getMaleAnnouncementDetailsFilterGenNmTDt", nmParameter, tDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_getUserAnouncement(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_getUserAnouncement", userIDParameter);
        }
    
        public virtual int updateProfile(Nullable<int> uid, string fname, string lname, Nullable<System.DateTime> bdate, string gender, string no)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var bdateParameter = bdate.HasValue ?
                new ObjectParameter("bdate", bdate) :
                new ObjectParameter("bdate", typeof(System.DateTime));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var noParameter = no != null ?
                new ObjectParameter("no", no) :
                new ObjectParameter("no", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateProfile", uidParameter, fnameParameter, lnameParameter, bdateParameter, genderParameter, noParameter);
        }
    
        public virtual int updateprofilepic(string image, Nullable<int> userid)
        {
            var imageParameter = image != null ?
                new ObjectParameter("image", image) :
                new ObjectParameter("image", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateprofilepic", imageParameter, useridParameter);
        }
    
        public virtual ObjectResult<Getname_Result> Getname(Nullable<int> uid)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Getname_Result>("Getname", uidParameter);
        }
    
        public virtual int USP_Add_Ann_Lend_Data(string anntype, string firstname, string lastname, Nullable<System.DateTime> dod, string gen, string bloc, string eloc, string msg, Nullable<int> userID, Nullable<System.DateTime> createdDate, Nullable<int> numberOfShares, Nullable<System.DateTime> dateOfBirth, Nullable<int> regretCount, string lendAHandText, Nullable<decimal> amountPledged, Nullable<System.DateTime> endDate, Nullable<int> fID)
        {
            var anntypeParameter = anntype != null ?
                new ObjectParameter("Anntype", anntype) :
                new ObjectParameter("Anntype", typeof(string));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("firstname", firstname) :
                new ObjectParameter("firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("lastname", lastname) :
                new ObjectParameter("lastname", typeof(string));
    
            var dodParameter = dod.HasValue ?
                new ObjectParameter("dod", dod) :
                new ObjectParameter("dod", typeof(System.DateTime));
    
            var genParameter = gen != null ?
                new ObjectParameter("gen", gen) :
                new ObjectParameter("gen", typeof(string));
    
            var blocParameter = bloc != null ?
                new ObjectParameter("bloc", bloc) :
                new ObjectParameter("bloc", typeof(string));
    
            var elocParameter = eloc != null ?
                new ObjectParameter("eloc", eloc) :
                new ObjectParameter("eloc", typeof(string));
    
            var msgParameter = msg != null ?
                new ObjectParameter("msg", msg) :
                new ObjectParameter("msg", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var numberOfSharesParameter = numberOfShares.HasValue ?
                new ObjectParameter("NumberOfShares", numberOfShares) :
                new ObjectParameter("NumberOfShares", typeof(int));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            var regretCountParameter = regretCount.HasValue ?
                new ObjectParameter("RegretCount", regretCount) :
                new ObjectParameter("RegretCount", typeof(int));
    
            var lendAHandTextParameter = lendAHandText != null ?
                new ObjectParameter("LendAHandText", lendAHandText) :
                new ObjectParameter("LendAHandText", typeof(string));
    
            var amountPledgedParameter = amountPledged.HasValue ?
                new ObjectParameter("AmountPledged", amountPledged) :
                new ObjectParameter("AmountPledged", typeof(decimal));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var fIDParameter = fID.HasValue ?
                new ObjectParameter("fID", fID) :
                new ObjectParameter("fID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_Add_Ann_Lend_Data", anntypeParameter, firstnameParameter, lastnameParameter, dodParameter, genParameter, blocParameter, elocParameter, msgParameter, userIDParameter, createdDateParameter, numberOfSharesParameter, dateOfBirthParameter, regretCountParameter, lendAHandTextParameter, amountPledgedParameter, endDateParameter, fIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_GetAnnouncementByUser(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_GetAnnouncementByUser", userIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_GetAllAnnouncement()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_GetAllAnnouncement");
        }
    
        public virtual ObjectResult<USP_LAHDetails_Result> USP_LAHDetails(Nullable<int> anouncementID)
        {
            var anouncementIDParameter = anouncementID.HasValue ?
                new ObjectParameter("anouncementID", anouncementID) :
                new ObjectParameter("anouncementID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_LAHDetails_Result>("USP_LAHDetails", anouncementIDParameter);
        }
    
        public virtual int USP_Regreted(Nullable<int> annid, Nullable<int> uid)
        {
            var annidParameter = annid.HasValue ?
                new ObjectParameter("annid", annid) :
                new ObjectParameter("annid", typeof(int));
    
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_Regreted", annidParameter, uidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_Add_Ann_Lend_Data_OTHER(string anntype, string firstname, string lastname, Nullable<System.DateTime> dod, string gen, string bloc, string eloc, string msg, Nullable<int> userID, Nullable<System.DateTime> createdDate, Nullable<int> numberOfShares, Nullable<System.DateTime> dateOfBirth, Nullable<int> regretCount, string lendAHandText, Nullable<decimal> amountPledged, Nullable<System.DateTime> endDate, Nullable<int> fID)
        {
            var anntypeParameter = anntype != null ?
                new ObjectParameter("Anntype", anntype) :
                new ObjectParameter("Anntype", typeof(string));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("firstname", firstname) :
                new ObjectParameter("firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("lastname", lastname) :
                new ObjectParameter("lastname", typeof(string));
    
            var dodParameter = dod.HasValue ?
                new ObjectParameter("dod", dod) :
                new ObjectParameter("dod", typeof(System.DateTime));
    
            var genParameter = gen != null ?
                new ObjectParameter("gen", gen) :
                new ObjectParameter("gen", typeof(string));
    
            var blocParameter = bloc != null ?
                new ObjectParameter("bloc", bloc) :
                new ObjectParameter("bloc", typeof(string));
    
            var elocParameter = eloc != null ?
                new ObjectParameter("eloc", eloc) :
                new ObjectParameter("eloc", typeof(string));
    
            var msgParameter = msg != null ?
                new ObjectParameter("msg", msg) :
                new ObjectParameter("msg", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var numberOfSharesParameter = numberOfShares.HasValue ?
                new ObjectParameter("NumberOfShares", numberOfShares) :
                new ObjectParameter("NumberOfShares", typeof(int));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            var regretCountParameter = regretCount.HasValue ?
                new ObjectParameter("RegretCount", regretCount) :
                new ObjectParameter("RegretCount", typeof(int));
    
            var lendAHandTextParameter = lendAHandText != null ?
                new ObjectParameter("LendAHandText", lendAHandText) :
                new ObjectParameter("LendAHandText", typeof(string));
    
            var amountPledgedParameter = amountPledged.HasValue ?
                new ObjectParameter("AmountPledged", amountPledged) :
                new ObjectParameter("AmountPledged", typeof(decimal));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var fIDParameter = fID.HasValue ?
                new ObjectParameter("fID", fID) :
                new ObjectParameter("fID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_Add_Ann_Lend_Data_OTHER", anntypeParameter, firstnameParameter, lastnameParameter, dodParameter, genParameter, blocParameter, elocParameter, msgParameter, userIDParameter, createdDateParameter, numberOfSharesParameter, dateOfBirthParameter, regretCountParameter, lendAHandTextParameter, amountPledgedParameter, endDateParameter, fIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_GetAnnouncementID(Nullable<int> userID, Nullable<System.DateTime> created)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var createdParameter = created.HasValue ?
                new ObjectParameter("Created", created) :
                new ObjectParameter("Created", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_GetAnnouncementID", userIDParameter, createdParameter);
        }
    
        public virtual ObjectResult<USP_getTimeline_Result> USP_getTimeline(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_getTimeline_Result>("USP_getTimeline", useridParameter);
        }
    
        public virtual int USP_insertEvent(Nullable<int> userid, string name, string message, Nullable<int> category, Nullable<int> type, string vlink)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var categoryParameter = category.HasValue ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var vlinkParameter = vlink != null ?
                new ObjectParameter("Vlink", vlink) :
                new ObjectParameter("Vlink", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_insertEvent", useridParameter, nameParameter, messageParameter, categoryParameter, typeParameter, vlinkParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_GetAllLAH()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_GetAllLAH");
        }
    
        public virtual ObjectResult<Nullable<int>> USP_getUserLAH(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_getUserLAH", userIDParameter);
        }
    
        public virtual ObjectResult<USP_getFamilyTree1_Result> USP_getFamilyTree1(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_getFamilyTree1_Result>("USP_getFamilyTree1", useridParameter);
        }
    
        public virtual int USP_reomoveNodeFTree(Nullable<int> uindex)
        {
            var uindexParameter = uindex.HasValue ?
                new ObjectParameter("uindex", uindex) :
                new ObjectParameter("uindex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_reomoveNodeFTree", uindexParameter);
        }
    
        public virtual int USP_updateFamilyTree(Nullable<int> uindex, string fname, string lname, string rship, Nullable<System.DateTime> dOB, Nullable<System.DateTime> dOD)
        {
            var uindexParameter = uindex.HasValue ?
                new ObjectParameter("uindex", uindex) :
                new ObjectParameter("uindex", typeof(int));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            var rshipParameter = rship != null ?
                new ObjectParameter("rship", rship) :
                new ObjectParameter("rship", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var dODParameter = dOD.HasValue ?
                new ObjectParameter("DOD", dOD) :
                new ObjectParameter("DOD", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_updateFamilyTree", uindexParameter, fnameParameter, lnameParameter, rshipParameter, dOBParameter, dODParameter);
        }
    
        public virtual ObjectResult<USP_fetchFamilyTree_Result> USP_fetchFamilyTree(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_fetchFamilyTree_Result>("USP_fetchFamilyTree", useridParameter);
        }
    }
}
